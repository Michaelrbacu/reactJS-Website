{"version":3,"file":"static/js/280.2ab5970a.chunk.js","mappings":"kJA4GA,QAxGA,WACE,MAAOA,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAClCG,EAAiBC,IAAsBJ,EAAAA,EAAAA,UAAS,KAChDK,EAAgBC,IAAqBN,EAAAA,EAAAA,UAAS,OA4CrD,OA1CAO,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAcC,aAAaC,QAAQ,SACrCF,GACFT,EAASY,KAAKC,MAAMJ,GACtB,GACC,KAEHD,EAAAA,EAAAA,YAAU,KACRE,aAAaI,QAAQ,QAASF,KAAKG,UAAUhB,GAAO,GACnD,CAACA,KAkCFiB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLC,YAAY,YACZC,MAAOpB,EACPqB,SAAWC,GAAMrB,EAAYqB,EAAEC,OAAOH,UAExCH,EAAAA,EAAAA,KAAA,YACEE,YAAY,mBACZC,MAAOlB,EACPmB,SAAWC,GAAMnB,EAAmBmB,EAAEC,OAAOH,UAE/CN,EAAAA,EAAAA,MAAA,UACEM,MAAOhB,EACPiB,SAAWC,GAAMjB,EAAkBiB,EAAEC,OAAOH,OAAOJ,SAAA,EAEnDC,EAAAA,EAAAA,KAAA,UAAQG,MAAM,MAAKJ,SAAC,SACpBC,EAAAA,EAAAA,KAAA,UAAQG,MAAM,SAAQJ,SAAC,YACvBC,EAAAA,EAAAA,KAAA,UAAQG,MAAM,OAAMJ,SAAC,aAEvBC,EAAAA,EAAAA,KAAA,UAAQO,QArDQC,KACpB,GAAwB,KAApBzB,EAAS0B,QAA4C,KAA3BxB,EAAgBwB,OAC5C,OAGF,MAAMC,EAAU,CACdC,KAAM5B,EACN6B,YAAa3B,EACb4B,WAAY1B,EACZ2B,SAAS,IAAIC,MAAOC,iBACpBC,WAAW,GAGbpC,GAAUqC,GAAc,IAAIA,EAAWR,KACvC1B,EAAY,IACZE,EAAmB,IACnBE,EAAkB,MAAM,EAqCWW,SAAC,iBAElCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,eAAcC,UAC3BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,SACvBnB,EAAMuC,KAAI,CAACC,EAAMC,KAChBxB,EAAAA,EAAAA,MAAA,OAEEC,UAAS,QAAAwB,OAAUF,EAAKH,UAAY,YAAc,IAAKlB,SAAA,EAEvDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,UAAAD,SAASqB,EAAKT,QACdX,EAAAA,EAAAA,KAAA,KAAGuB,MAAO,CAAEC,MAAO,QAASzB,SAAEqB,EAAKR,kBAErCf,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACxBF,EAAAA,EAAAA,MAAA,QAAMC,UAAU,YAAWC,SAAA,CAAC,UAAQqB,EAAKN,YACzCd,EAAAA,EAAAA,KAAA,UAAQO,QAASA,IAjDHc,KAC1BxC,GAAUqC,GACRA,EAAUC,KAAI,CAACC,EAAMK,IACnBA,IAAMJ,EAAQ,IAAKD,EAAMH,WAAYG,EAAKH,WAAcG,KAE3D,EA4CkCM,CAAmBL,GAAOtB,SAC9CqB,EAAKH,UAAY,OAAS,iBAG/BjB,EAAAA,EAAAA,KAAA,OACE2B,I,6mNACAC,IAAI,SACJ9B,UAAU,cACVyB,MAAO,CAAEM,MAAO,OAAQC,OAAQ,QAChCvB,QAASA,IAlDGc,KACxBxC,GAAUqC,GAAcA,EAAUa,QAAO,CAACC,EAAGP,IAAMA,IAAMJ,KAAO,EAiDrCY,CAAiBZ,OAlB7BA,WA0BnB,C","sources":["components/todo/todo.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./todo.css\";\r\nimport trash from \"./trash-icon.png\";\r\n\r\nfunction Todo() {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [taskName, setTaskName] = useState(\"\");\r\n  const [taskDescription, setTaskDescription] = useState(\"\");\r\n  const [taskImportance, setTaskImportance] = useState(\"low\");\r\n\r\n  useEffect(() => {\r\n    const storedTasks = localStorage.getItem(\"tasks\");\r\n    if (storedTasks) {\r\n      setTasks(JSON.parse(storedTasks));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n  }, [tasks]);\r\n\r\n  const handleAddTask = () => {\r\n    if (taskName.trim() === \"\" || taskDescription.trim() === \"\") {\r\n      return;\r\n    }\r\n\r\n    const newTask = {\r\n      name: taskName,\r\n      description: taskDescription,\r\n      importance: taskImportance,\r\n      addedAt: new Date().toLocaleString(),\r\n      completed: false,\r\n    };\r\n\r\n    setTasks((prevTasks) => [...prevTasks, newTask]);\r\n    setTaskName(\"\");\r\n    setTaskDescription(\"\");\r\n    setTaskImportance(\"low\");\r\n  };\r\n\r\n  const handleCompleteTask = (index) => {\r\n    setTasks((prevTasks) =>\r\n      prevTasks.map((task, i) =>\r\n        i === index ? { ...task, completed: !task.completed } : task\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleDeleteTask = (index) => {\r\n    setTasks((prevTasks) => prevTasks.filter((_, i) => i !== index));\r\n  };\r\n\r\n  return (\r\n    <div className=\"todo\">\r\n      <div className=\"task-inputs\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Task Name\"\r\n          value={taskName}\r\n          onChange={(e) => setTaskName(e.target.value)}\r\n        />\r\n        <textarea\r\n          placeholder=\"Task Description\"\r\n          value={taskDescription}\r\n          onChange={(e) => setTaskDescription(e.target.value)}\r\n        />\r\n        <select\r\n          value={taskImportance}\r\n          onChange={(e) => setTaskImportance(e.target.value)}\r\n        >\r\n          <option value=\"low\">Low</option>\r\n          <option value=\"medium\">Medium</option>\r\n          <option value=\"high\">High</option>\r\n        </select>\r\n        <button onClick={handleAddTask}>Add Task</button>\r\n      </div>\r\n      <div className=\"todo-content\">\r\n        <div className=\"task-grid\">\r\n          {tasks.map((task, index) => (\r\n            <div\r\n              key={index}\r\n              className={`task ${task.completed ? \"completed\" : \"\"}`}\r\n            >\r\n              <div className=\"task-text\">\r\n                <strong>{task.name}</strong>\r\n                <p style={{ color: \"#000\" }}>{task.description}</p>\r\n              </div>\r\n              <div className=\"task-info\">\r\n                <span className=\"task-date\">Added: {task.addedAt}</span>\r\n                <button onClick={() => handleCompleteTask(index)}>\r\n                  {task.completed ? \"Undo\" : \"Complete\"}\r\n                </button>\r\n              </div>\r\n              <img\r\n                src={trash}\r\n                alt=\"Delete\"\r\n                className=\"task-delete\"\r\n                style={{ width: \"20px\", height: \"20px\" }}\r\n                onClick={() => handleDeleteTask(index)}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Todo;\r\n"],"names":["tasks","setTasks","useState","taskName","setTaskName","taskDescription","setTaskDescription","taskImportance","setTaskImportance","useEffect","storedTasks","localStorage","getItem","JSON","parse","setItem","stringify","_jsxs","className","children","_jsx","type","placeholder","value","onChange","e","target","onClick","handleAddTask","trim","newTask","name","description","importance","addedAt","Date","toLocaleString","completed","prevTasks","map","task","index","concat","style","color","i","handleCompleteTask","src","alt","width","height","filter","_","handleDeleteTask"],"sourceRoot":""}