{"version":3,"file":"static/js/766.c1dcadf8.chunk.js","mappings":"mLA+DA,MA5DA,WACE,IAAAA,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAA8BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAnCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GA8B1B,OA5BAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAcC,aAAaC,QAAQ,SACrCF,GACFN,EAASS,KAAKC,MAAMJ,GAExB,GAAG,KAEHD,EAAAA,EAAAA,YAAU,WACRE,aAAaI,QAAQ,QAASF,KAAKG,UAAUb,GAC/C,GAAG,CAACA,KAoBFc,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,eAAcC,UAC3BC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,YAAWC,SACtBhB,EAAMkB,KAAI,SAACC,EAAMC,GAAK,OACrBN,EAAAA,EAAAA,MAAA,MAAgBC,UAAU,eAAcC,SAAA,CACrCG,GACDF,EAAAA,EAAAA,KAAA,UAAQI,QAAS,kBAZJ,SAACD,GACxB,IAAME,EAAetB,EAAMuB,QAAO,SAACC,EAAGC,GAAC,OAAKA,IAAML,CAAK,IACvDnB,EAASqB,EACX,CASmCI,CAAiBN,EAAM,EAACJ,SAAC,aAFzCI,EAGJ,SAIXN,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,SACEU,KAAK,OACLC,YAAY,oBACZC,MAAOzB,EACP0B,SAlCkB,SAACC,GACzB1B,EAAW0B,EAAMC,OAAOH,MAC1B,KAkCMZ,EAAAA,EAAAA,KAAA,UAAQI,QAhCQ,WACpB,GAAuB,KAAnBjB,EAAQ6B,OAAe,CACzB,IAAMX,EAAY,GAAAY,QAAAC,EAAAA,EAAAA,GAAOnC,GAAK,CAAEI,IAChCH,EAASqB,GACTjB,EAAW,GACb,CACF,EA0BqCW,SAAC,cAIxC,C","sources":["components/todo/todo.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./todo.css\";\r\n\r\nfunction Todo() {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [newTask, setNewTask] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const storedTasks = localStorage.getItem(\"tasks\");\r\n    if (storedTasks) {\r\n      setTasks(JSON.parse(storedTasks));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n  }, [tasks]);\r\n\r\n  const handleInputChange = (event) => {\r\n    setNewTask(event.target.value);\r\n  };\r\n\r\n  const handleAddTask = () => {\r\n    if (newTask.trim() !== \"\") {\r\n      const updatedTasks = [...tasks, newTask];\r\n      setTasks(updatedTasks);\r\n      setNewTask(\"\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteTask = (index) => {\r\n    const updatedTasks = tasks.filter((_, i) => i !== index);\r\n    setTasks(updatedTasks);\r\n  };\r\n\r\n  return (\r\n    <div className=\"todo\">\r\n      <div className=\"todo-content\">\r\n        <ul className=\"todo-list\">\r\n          {tasks.map((task, index) => (\r\n            <li key={index} className=\"chat-message\">\r\n              {task}\r\n              <button onClick={() => handleDeleteTask(index)}>Delete</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div className=\"todo-form\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Type a message...\"\r\n          value={newTask}\r\n          onChange={handleInputChange}\r\n        />\r\n        <button onClick={handleAddTask}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n//change\r\n\r\nexport default Todo;"],"names":["_useState","useState","_useState2","_slicedToArray","tasks","setTasks","_useState3","_useState4","newTask","setNewTask","useEffect","storedTasks","localStorage","getItem","JSON","parse","setItem","stringify","_jsxs","className","children","_jsx","map","task","index","onClick","updatedTasks","filter","_","i","handleDeleteTask","type","placeholder","value","onChange","event","target","trim","concat","_toConsumableArray"],"sourceRoot":""}