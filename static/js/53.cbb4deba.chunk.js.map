{"version":3,"file":"static/js/53.cbb4deba.chunk.js","mappings":"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","sources":["components/nasa/nasa.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Lightbox from \"react-image-lightbox\";\r\nimport \"react-image-lightbox/style.css\";\r\nimport \"./nasa.css\";\r\n\r\nconst Nasa = () => {\r\n  const [lightboxIndex, setLightboxIndex] = useState(0); // Index for the image lightbox\r\n  const [lightboxOpen, setLightboxOpen] = useState(false); // Flag to control the lightbox visibility\r\n  const [apodData, setApodData] = useState({}); // Astronomy Picture of the Day data\r\n  const [neoData, setNeoData] = useState([]); // Near Earth Objects data\r\n  const [marsRoverPhotos, setMarsRoverPhotos] = useState([]); // Mars Rover Photos data\r\n  const [exoplanetData, setExoplanetData] = useState([]); // Exoplanet Archive data\r\n  const [epicData, setEpicData] = useState([]); // Earth Polychromatic Imaging Camera (EPIC) data\r\n  const [insightData, setInsightData] = useState([]); // InSight Mars Lander data\r\n  const [eonetData, setEonetData] = useState([]); // Earth Observatory Natural Event Tracker (EONET) data\r\n  const [issLocation, setIssLocation] = useState({}); // International Space Station (ISS) Location data\r\n  const [keplerExoplanetData, setKeplerExoplanetData] = useState([]); // Kepler Exoplanet data\r\n  const [sdoData, setSdoData] = useState([]); // Solar Dynamics Observatory (SDO) data\r\n  const [donkiData, setDonkiData] = useState([]); // Space Weather Database of Notifications, Knowledge, Information (DONKI) data\r\n  const [geneLabData, setGeneLabData] = useState([]); // GeneLab data\r\n\r\n  const [currentApi, setCurrentApi] = useState(\"apod\");\r\n\r\n  const apiEndpoints = [\r\n    \"apod\",\r\n    \"neo\",\r\n    \"marsRoverPhotos\",\r\n    \"exoplanetData\",\r\n    \"epic\",\r\n    \"insightData\",\r\n    \"eonetData\",\r\n    \"issLocation\",\r\n    \"keplerExoplanetData\",\r\n    \"sdoData\",\r\n    \"donkiData\",\r\n    \"geneLabData\",\r\n  ];\r\n\r\n  // Function to fetch data based on the selected API\r\n  const fetchData = (api) => {\r\n    switch (api) {\r\n      case \"apod\":\r\n        fetch(\r\n          `https://api.nasa.gov/planetary/apod?api_key=${process.env.REACT_APP_NASA_API_KEY}`\r\n        )\r\n          .then((response) => response.json())\r\n          .then((data) => setApodData(data))\r\n          .catch((error) => console.error(\"Error fetching APOD data:\", error));\r\n        break;\r\n      case \"neo\":\r\n        fetch(\r\n          `https://api.nasa.gov/neo/rest/v1/neo/browse?api_key=${process.env.REACT_APP_NASA_API_KEY}`\r\n        )\r\n          .then((response) => response.json())\r\n          .then((data) => setNeoData(data))\r\n          .catch((error) => console.error(\"Error fetching NEO data:\", error));\r\n        break;\r\n      case \"marsRoverPhotos\":\r\n        fetch(\r\n          `https://api.nasa.gov/mars-photos/api/v1/rovers/curiosity/photos?sol=1000&api_key=${process.env.REACT_APP_NASA_API_KEY}`\r\n        )\r\n          .then((response) => response.json())\r\n          .then((data) => setMarsRoverPhotos(data.photos))\r\n          .catch((error) =>\r\n            console.error(\"Error fetching Mars Rover Photos data:\", error)\r\n          );\r\n        break;\r\n      case \"exoplanetData\":\r\n        fetch(\r\n          `https://exoplanetarchive.ipac.caltech.edu/cgi-bin/nstedAPI/nph-nstedAPI?table=exoplanets&format=json`\r\n        )\r\n          .then((response) => response.json())\r\n          .then((data) => setExoplanetData(data))\r\n          .catch((error) =>\r\n            console.error(\"Error fetching Exoplanet Archive data:\", error)\r\n          );\r\n        break;\r\n      case \"epic\":\r\n        fetch(\r\n          `https://api.nasa.gov/EPIC/api/natural/images?api_key=${process.env.REACT_APP_NASA_API_KEY}`\r\n        )\r\n          .then((response) => response.json())\r\n          .then((data) => setEpicData(data))\r\n          .catch((error) => console.error(\"Error fetching EPIC data:\", error));\r\n        break;\r\n      case \"insightData\":\r\n        fetch(\r\n          `https://api.nasa.gov/insight_weather/?api_key=${process.env.REACT_APP_NASA_API_KEY}&feedtype=json&ver=1.0`\r\n        )\r\n          .then((response) => response.json())\r\n          .then((data) => setInsightData(data))\r\n          .catch((error) =>\r\n            console.error(\"Error fetching InSight data:\", error)\r\n          );\r\n        break;\r\n      case \"eonetData\":\r\n        fetch(`https://eonet.sci.gsfc.nasa.gov/api/v2.1/events`)\r\n          .then((response) => response.json())\r\n          .then((data) => setEonetData(data.events))\r\n          .catch((error) => console.error(\"Error fetching EONET data:\", error));\r\n        break;\r\n      case \"issLocation\":\r\n        fetch(`https://api.wheretheiss.at/v1/satellites/25544`)\r\n          .then((response) => response.json())\r\n          .then((data) => setIssLocation(data))\r\n          .catch((error) =>\r\n            console.error(\"Error fetching ISS Location data:\", error)\r\n          );\r\n        break;\r\n      case \"keplerExoplanetData\":\r\n        fetch(`https://api.nasa.gov/kepler/api/systems/223`)\r\n          .then((response) => response.json())\r\n          .then((data) => setKeplerExoplanetData(data))\r\n          .catch((error) =>\r\n            console.error(\"Error fetching Kepler Exoplanet data:\", error)\r\n          );\r\n        break;\r\n      case \"sdoData\":\r\n        fetch(`https://api.nasa.gov/dsn/api/solar_system_bodies/?limit=5`)\r\n          .then((response) => response.json())\r\n          .then((data) => setSdoData(data))\r\n          .catch((error) => console.error(\"Error fetching SDO data:\", error));\r\n        break;\r\n      case \"donkiData\":\r\n        fetch(\r\n          `https://api.nasa.gov/donki/notifications?type=all&api_key=${process.env.REACT_APP_NASA_API_KEY}`\r\n        )\r\n          .then((response) => response.json())\r\n          .then((data) => setDonkiData(data))\r\n          .catch((error) => console.error(\"Error fetching Donki data:\", error));\r\n        break;\r\n      case \"geneLabData\":\r\n        fetch(`https://genelab-data.ndc.nasa.gov/genelab/data/genes/?limit=5`)\r\n          .then((response) => response.json())\r\n          .then((data) => setGeneLabData(data))\r\n          .catch((error) =>\r\n            console.error(\"Error fetching GeneLab data:\", error)\r\n          );\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  // Effect hook to fetch data when the selected API changes\r\n  useEffect(() => {\r\n    fetchData(currentApi);\r\n  }, [currentApi]);\r\n\r\n  // Handler to change the selected API\r\n  const handleApiChange = (api) => {\r\n    setCurrentApi(api);\r\n  };\r\n\r\n  // Handler to open the lightbox with a specific image\r\n  const handleLightboxOpen = (index) => {\r\n    setLightboxIndex(index);\r\n    setLightboxOpen(true);\r\n  };\r\n\r\n  // Handler to close the lightbox\r\n  const handleLightboxClose = () => {\r\n    setLightboxOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div id=\"nasa-section\">\r\n      <h1>NASA API Features</h1>\r\n      <div className=\"api-list\">\r\n        <h2>Choose an API feature:</h2>\r\n        <ul>\r\n          {apiEndpoints.map((api) => (\r\n            <li key={api}>\r\n              <button onClick={() => handleApiChange(api)}>{api}</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      <div>\r\n        {currentApi === \"apod\" && (\r\n          <div className=\"api-feature\">\r\n            <h2>Astronomy Picture of the Day</h2>\r\n            <div className=\"api-content\">\r\n              <div className=\"api-image\">\r\n                <h1 className=\"apodtitle\">Title: {apodData.title}</h1>\r\n\r\n                <img src={apodData.url} alt={apodData.title} />\r\n              </div>\r\n              <div className=\"api-description\">\r\n                <p>Explanation: {apodData.explanation}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        {currentApi === \"neo\" && (\r\n          <div className=\"api-section\">\r\n            <h2>Near Earth Objects</h2>\r\n            <ul className=\"gallery\">\r\n              {neoData.near_earth_objects &&\r\n                neoData.near_earth_objects.map((item, index) => (\r\n                  <li key={index} className=\"neo-item\">\r\n                    <h3>Name: {item.name}</h3>\r\n                    <p>Reference ID: {item.neo_reference_id}</p>\r\n                    <p>\r\n                      Close Approach Date:{\" \"}\r\n                      {item.close_approach_data[0].close_approach_date}\r\n                    </p>\r\n                    <p>\r\n                      Miss Distance:{\" \"}\r\n                      {item.close_approach_data[0].miss_distance.kilometers} km\r\n                    </p>\r\n                    <p>\r\n                      Relative Velocity:{\" \"}\r\n                      {\r\n                        item.close_approach_data[0].relative_velocity\r\n                          .kilometers_per_hour\r\n                      }{\" \"}\r\n                      km/h\r\n                    </p>\r\n                  </li>\r\n                ))}\r\n            </ul>\r\n          </div>\r\n        )}\r\n\r\n        {currentApi === \"marsRoverPhotos\" && (\r\n          <div>\r\n            <h2>Mars Rover Photos</h2>\r\n            <ul className=\"gallery\">\r\n              {marsRoverPhotos.map((photo, index) => (\r\n                <li key={index} onClick={() => handleLightboxOpen(index)}>\r\n                  <img src={photo.img_src} alt={`Mars Rover Photo ${index}`} />\r\n                </li>\r\n              ))}\r\n            </ul>\r\n            {lightboxOpen && (\r\n              <Lightbox\r\n                mainSrc={marsRoverPhotos[lightboxIndex].img_src}\r\n                nextSrc={\r\n                  marsRoverPhotos[(lightboxIndex + 1) % marsRoverPhotos.length]\r\n                    .img_src\r\n                }\r\n                prevSrc={\r\n                  marsRoverPhotos[\r\n                    (lightboxIndex + marsRoverPhotos.length - 1) %\r\n                      marsRoverPhotos.length\r\n                  ].img_src\r\n                }\r\n                onCloseRequest={handleLightboxClose}\r\n                onMovePrevRequest={() =>\r\n                  setLightboxIndex(\r\n                    (lightboxIndex + marsRoverPhotos.length - 1) %\r\n                      marsRoverPhotos.length\r\n                  )\r\n                }\r\n                onMoveNextRequest={() =>\r\n                  setLightboxIndex((lightboxIndex + 1) % marsRoverPhotos.length)\r\n                }\r\n              />\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {currentApi === \"exoplanetData\" && (\r\n          <div>\r\n            <h2>Exoplanet Archive</h2>\r\n            <ul>\r\n              {exoplanetData.map((planet, index) => (\r\n                <li key={index}>{planet.pl_name}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )}\r\n        {currentApi === \"epic\" && (\r\n          <div>\r\n            <h2>Earth Polychromatic Imaging Camera (EPIC)</h2>\r\n            <ul className=\"gallery\">\r\n              {epicData.map((item, index) => (\r\n                <li key={index} onClick={() => handleLightboxOpen(index)}>\r\n                  <img\r\n                    src={`https://epic.gsfc.nasa.gov/archive/natural/${item.date\r\n                      .split(\" \")[0]\r\n                      .replace(/-/g, \"/\")}/png/${item.image}.png`}\r\n                    alt={`EPIC ${item.date}`}\r\n                  />\r\n                </li>\r\n              ))}\r\n            </ul>\r\n            {lightboxOpen && (\r\n              <Lightbox\r\n                mainSrc={`https://epic.gsfc.nasa.gov/archive/natural/${epicData[\r\n                  lightboxIndex\r\n                ].date\r\n                  .split(\" \")[0]\r\n                  .replace(/-/g, \"/\")}/png/${\r\n                  epicData[lightboxIndex].image\r\n                }.png`}\r\n                nextSrc={`https://epic.gsfc.nasa.gov/archive/natural/${epicData[\r\n                  (lightboxIndex + 1) % epicData.length\r\n                ].date\r\n                  .split(\" \")[0]\r\n                  .replace(/-/g, \"/\")}/png/${\r\n                  epicData[(lightboxIndex + 1) % epicData.length].image\r\n                }.png`}\r\n                prevSrc={`https://epic.gsfc.nasa.gov/archive/natural/${epicData[\r\n                  (lightboxIndex + epicData.length - 1) % epicData.length\r\n                ].date\r\n                  .split(\" \")[0]\r\n                  .replace(/-/g, \"/\")}/png/${\r\n                  epicData[\r\n                    (lightboxIndex + epicData.length - 1) % epicData.length\r\n                  ].image\r\n                }.png`}\r\n                onCloseRequest={handleLightboxClose}\r\n                onMovePrevRequest={() =>\r\n                  setLightboxIndex(\r\n                    (lightboxIndex + epicData.length - 1) % epicData.length\r\n                  )\r\n                }\r\n                onMoveNextRequest={() =>\r\n                  setLightboxIndex((lightboxIndex + 1) % epicData.length)\r\n                }\r\n              />\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {currentApi === \"insightData\" && insightData && (\r\n          <div>\r\n            <h2>InSight Mars Lander Data</h2>\r\n            <p>Season: {insightData.season}</p>\r\n            <p>Average Temperature: {insightData.average_temp}</p>\r\n          </div>\r\n        )}\r\n\r\n        {currentApi === \"eonetData\" && (\r\n          <div>\r\n            <h2>Earth Observatory Natural Event Tracker (EONET)</h2>\r\n            {eonetData && eonetData.length > 0 ? (\r\n              <ul>\r\n                {eonetData.map((event, index) => (\r\n                  <li key={index}>\r\n                    <p>Event Title: {event.title}</p>\r\n                    <p>Category: {event.categories[0].title}</p>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            ) : (\r\n              <p>No data available for this API.</p>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {currentApi === \"issLocation\" && issLocation && (\r\n          <div>\r\n            <h2>International Space Station (ISS) Location</h2>\r\n            <p>Latitude: {issLocation.latitude}</p>\r\n            <p>Longitude: {issLocation.longitude}</p>\r\n          </div>\r\n        )}\r\n\r\n        {currentApi === \"keplerExoplanetData\" && keplerExoplanetData && (\r\n          <div>\r\n            <h2>Kepler Exoplanet Data</h2>\r\n            <ul>\r\n              {keplerExoplanetData.map((planet, index) => (\r\n                <li key={index}>\r\n                  <p>Planet Name: {planet.pl_name}</p>\r\n                  <p>Discovery Method: {planet.pl_discmethod}</p>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )}\r\n\r\n        {currentApi === \"sdoData\" && sdoData && (\r\n          <div>\r\n            <h2>Solar Dynamics Observatory (SDO) Data</h2>\r\n            <ul>\r\n              {sdoData.bodies.map((body, index) => (\r\n                <li key={index}>\r\n                  <p>Body Name: {body.bodyName}</p>\r\n                  <p>Body Type: {body.bodyType}</p>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )}\r\n\r\n        {currentApi === \"donkiData\" && donkiData && (\r\n          <div>\r\n            <h2>\r\n              Space Weather Database of Notifications, Knowledge, Information\r\n              (DONKI)\r\n            </h2>\r\n            <ul>\r\n              {donkiData.map((notification, index) => (\r\n                <li key={index}>\r\n                  <p>Event Type: {notification.messageType}</p>\r\n                  <p>Start Time: {notification.startTime}</p>\r\n                  <p>End Time: {notification.endTime}</p>\r\n                  <p>Activity ID: {notification.activityID}</p>\r\n                  <p>Event Description: {notification.messageBody}</p>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )}\r\n\r\n        {currentApi === \"geneLabData\" && geneLabData && (\r\n          <div>\r\n            <h2>GeneLab Data</h2>\r\n            <ul>\r\n              {geneLabData.map((gene, index) => (\r\n                <li key={index}>\r\n                  <p>Gene Name: {gene.gene_name}</p>\r\n                  <p>Organism: {gene.organism}</p>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nasa;\r\n"],"names":["Nasa","lightboxIndex","setLightboxIndex","useState","lightboxOpen","setLightboxOpen","apodData","setApodData","neoData","setNeoData","marsRoverPhotos","setMarsRoverPhotos","exoplanetData","setExoplanetData","epicData","setEpicData","insightData","setInsightData","eonetData","setEonetData","issLocation","setIssLocation","keplerExoplanetData","setKeplerExoplanetData","sdoData","setSdoData","donkiData","setDonkiData","geneLabData","setGeneLabData","currentApi","setCurrentApi","useEffect","api","fetch","concat","process","then","response","json","data","catch","error","console","photos","events","fetchData","handleLightboxOpen","index","handleLightboxClose","_jsxs","id","children","_jsx","className","map","onClick","handleApiChange","title","src","url","alt","explanation","near_earth_objects","item","name","neo_reference_id","close_approach_data","close_approach_date","miss_distance","kilometers","relative_velocity","kilometers_per_hour","photo","img_src","Lightbox","mainSrc","nextSrc","length","prevSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","planet","pl_name","date","split","replace","image","season","average_temp","event","categories","latitude","longitude","pl_discmethod","bodies","body","bodyName","bodyType","notification","messageType","startTime","endTime","activityID","messageBody","gene","gene_name","organism"],"sourceRoot":""}