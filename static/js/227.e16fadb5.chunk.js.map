{"version":3,"file":"static/js/227.e16fadb5.chunk.js","mappings":"0KAyEA,EAtEa,WACX,IAAAA,GAAgCC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAC5BI,GAAgCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAAoCT,EAAAA,EAAAA,UAAS,QAAOU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA7CE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,IAoBhCG,EAAAA,EAAAA,YAAU,YAjBQ,SAACC,GACjB,OAAQA,GACN,IAAK,OACHC,MAAM,+CAADC,OAAgDC,6CAClDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,IAChCF,MAAK,SAAAG,GAAI,OAAIjB,EAAYiB,EAAK,IAC9BC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAM,4BAA6BA,EAAM,IACnE,MACF,IAAK,OACHR,MAAM,wDAADC,OAAyDC,6CAC3DC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,IAChCF,MAAK,SAAAG,GAAI,OAAIb,EAAYa,EAAK,IAC9BC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAM,4BAA6BA,EAAM,IAGzE,CAGEE,CAAUd,EACZ,GAAG,CAACA,IAMJ,OACEe,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,uBACJD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,4BACJC,EAAAA,EAAAA,KAAA,MAAAD,SAhCe,CAAC,OAAQ,QAiCRE,KAAI,SAAAf,GAAG,OACnBc,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,UAAQE,QAAS,kBAZL,SAAChB,GACvBF,EAAcE,EAChB,CAUmCiB,CAAgBjB,EAAI,EAACa,SAAEb,KADvCA,EAEJ,UAIXY,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CACkB,SAAfhB,GAAyBR,EAAS6B,QACjCN,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAKxB,EAAS6B,SACdJ,EAAAA,EAAAA,KAAA,KAAAD,SAAIxB,EAAS8B,eACbL,EAAAA,EAAAA,KAAA,OAAKM,IAAK/B,EAASgC,IAAKC,IAAKjC,EAAS6B,MAAOK,MAAO,CAAEC,SAAU,aAGpD,SAAf3B,GAAyBJ,EAASgC,OAAS,IAC1Cb,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,iBACJC,EAAAA,EAAAA,KAAA,MAAAD,SACGpB,EAASsB,KAAI,SAACW,EAAMC,GAAK,OACxBb,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,OAAKM,IAAG,8CAAAlB,OAAgDwB,EAAKE,KAAKC,MAAM,KAAK,GAAGC,QAAQ,KAAM,KAAI,SAAA5B,OAAQwB,EAAKK,MAAK,QAAQT,IAAG,QAAApB,OAAUwB,EAAKE,MAAQL,MAAO,CAAEC,SAAU,WADlKG,EAEJ,cASrB,C","sources":["components/nasa/nasa.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport \"./nasa.css\";\r\n\r\nconst Nasa = () => {\r\n  const [apodData, setApodData] = useState({});\r\n  const [epicData, setEpicData] = useState([]);\r\n  const [currentApi, setCurrentApi] = useState('apod');\r\n  const apiEndpoints = ['apod', 'epic'];\r\n\r\n  const fetchData = (api) => {\r\n    switch (api) {\r\n      case 'apod':\r\n        fetch(`https://api.nasa.gov/planetary/apod?api_key=${process.env.REACT_APP_NASA_API_KEY}`)\r\n          .then(response => response.json())\r\n          .then(data => setApodData(data))\r\n          .catch(error => console.error('Error fetching APOD data:', error));\r\n        break;\r\n      case 'epic':\r\n        fetch(`https://api.nasa.gov/EPIC/api/natural/images?api_key=${process.env.REACT_APP_NASA_API_KEY}`)\r\n          .then(response => response.json())\r\n          .then(data => setEpicData(data))\r\n          .catch(error => console.error('Error fetching EPIC data:', error));\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData(currentApi);\r\n  }, [currentApi]);\r\n\r\n  const handleApiChange = (api) => {\r\n    setCurrentApi(api);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>NASA API Features</h1>\r\n      <div>\r\n        <h2>Choose an API feature:</h2>\r\n        <ul>\r\n          {apiEndpoints.map(api => (\r\n            <li key={api}>\r\n              <button onClick={() => handleApiChange(api)}>{api}</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div>\r\n        {currentApi === 'apod' && apodData.title && (\r\n          <div>\r\n            <h2>{apodData.title}</h2>\r\n            <p>{apodData.explanation}</p>\r\n            <img src={apodData.url} alt={apodData.title} style={{ maxWidth: '100%' }} />\r\n          </div>\r\n        )}\r\n        {currentApi === 'epic' && epicData.length > 0 && (\r\n          <div>\r\n            <h2>EPIC Images</h2>\r\n            <ul>\r\n              {epicData.map((item, index) => (\r\n                <li key={index}>\r\n                  <img src={`https://epic.gsfc.nasa.gov/archive/natural/${item.date.split(' ')[0].replace(/-/g, '/')}/png/${item.image}.png`} alt={`EPIC ${item.date}`} style={{ maxWidth: '100%' }} />\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )}\r\n        {/* Add more cases for other API features */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nasa;\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","apodData","setApodData","_useState3","_useState4","epicData","setEpicData","_useState5","_useState6","currentApi","setCurrentApi","useEffect","api","fetch","concat","process","then","response","json","data","catch","error","console","fetchData","_jsxs","children","_jsx","map","onClick","handleApiChange","title","explanation","src","url","alt","style","maxWidth","length","item","index","date","split","replace","image"],"sourceRoot":""}