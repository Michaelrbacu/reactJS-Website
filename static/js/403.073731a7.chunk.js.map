{"version":3,"file":"static/js/403.073731a7.chunk.js","mappings":"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","sources":["components/weather/Weather.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\n\r\n\r\nconst api = {\r\n  key: process.env.REACT_APP_OPENWEATHERMAP_API_KEY,\r\n  base: \"https://api.openweathermap.org/data/2.5/\"\r\n};\r\n\r\nconst popularCities = [\r\n  \"Greer\",\r\n  \"London\",\r\n  \"New York\",\r\n  \"Paris\",\r\n  \"Tokyo\",\r\n  \"Sydney\",\r\n  \"Dubai\",\r\n  \"Moscow\",\r\n  \"Rio de Janeiro\",\r\n];\r\n\r\nfunction Weather() {\r\n  const [query, setQuery] = useState('');\r\n  const [weather, setWeather] = useState({});\r\n  const [showDropdown, setShowDropdown] = useState(false);\r\n\r\n  const search = () => {\r\n    \r\n    setShowDropdown(false);\r\n    fetch(`${api.base}weather?q=${query}&appid=${api.key}&units=metric`)\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        setWeather(result);\r\n        setQuery('');\r\n        console.log(result);\r\n      });\r\n  };\r\n\r\n  \r\n\r\n  const handleKeyPress = (event) => {\r\n    if (event.key === 'Enter') {\r\n      search();\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setQuery(event.target.value);\r\n  };\r\n\r\n  const handleDropdownClick = (city) => {\r\n    setQuery(city);\r\n    setShowDropdown(false);\r\n  };\r\n\r\n  const dateBuilder = (d) => {\r\n    let months = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ];\r\n    let days = [\r\n      \"Sunday\",\r\n      \"Monday\",\r\n      \"Tuesday\",\r\n      \"Wednesday\",\r\n      \"Thursday\",\r\n      \"Friday\",\r\n      \"Saturday\",\r\n    ];\r\n\r\n    let day = days[d.getDay()];\r\n    let date = d.getDate();\r\n    let month = months[d.getMonth()];\r\n    let year = d.getFullYear();\r\n\r\n    return `${day} ${date} ${month} ${year}`;\r\n  };\r\n\r\n  const handleSearchBarFocus = () => {\r\n    setShowDropdown(true);\r\n  };\r\n            var today = new Date();\r\n            var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n            \r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className={(typeof weather.main !== \"undefined\") ? ((weather.main.temp > 16) ? 'app warm' : 'app') : 'app'}>\r\n      <main>\r\n        <div className=\"search-box\">\r\n          <div className=\"search-bar-container\">\r\n            <input \r\n              type=\"text\"\r\n              className=\"search-bar\"\r\n              placeholder=\"Search...\"\r\n              onChange={handleChange}\r\n              value={query}\r\n              onKeyDown={handleKeyPress}\r\n              onFocus={handleSearchBarFocus}\r\n            />\r\n<div className=\"header-bar\">\r\n      <button className=\"search-button\" onClick={search}>\r\n        Search\r\n      </button>\r\n\r\n\r\n\r\n    </div>\r\n          </div>\r\n          {showDropdown && (\r\n            <div className=\"dropdown\">\r\n              {popularCities.map((city, index) => (\r\n                <div\r\n                  key={index}\r\n                  className=\"dropdown-item\"\r\n                  onClick={() => handleDropdownClick(city)}\r\n                >\r\n                  {city}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n        {(typeof weather.main !== \"undefined\") ? (\r\n            \r\n          \r\n        <div className=\"top-left\">\r\n            \r\n            <div className=\"location-box\">\r\n              <div className=\"location\">{weather.name}, {weather.sys.country}</div>\r\n              <div className=\"date\">{dateBuilder(new Date()) + \" \" + (time)}</div>\r\n            </div>\r\n            <div className=\"weather-box\">\r\n              <div className=\"temp\">\r\n                {Math.round(weather.main.temp)}°C\r\n                <br></br>\r\n                {Math.round(weather.main.temp*(9/5)+32)}°F\r\n              </div>\r\n              \r\n              </div>\r\n\r\n\r\n\r\n              <div className=\"bottom-row\">\r\n  <div className=\"weather-box2\">\r\n    <div>{weather.weather[0].description}</div>\r\n  </div>\r\n  <div className=\"weather-box2\">\r\n    <div>Humidity: {weather.main.humidity} &nbsp; &nbsp; Cloudiness: {weather.clouds.all}%</div>\r\n  </div>\r\n  <div className=\"weather-box2\">\r\n    <div>Wind Speed: {weather.wind.speed} &nbsp; &nbsp; Wind Direction: {weather.wind.deg}</div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n</div>\r\n            \r\n          \r\n        ) : ('')}\r\n        \r\n      </main>\r\n\r\n      <div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Weather;"],"names":["api","process","popularCities","_useState","useState","_useState2","_slicedToArray","query","setQuery","_useState3","_useState4","weather","setWeather","_useState5","_useState6","showDropdown","setShowDropdown","search","fetch","concat","then","res","json","result","console","log","today","Date","time","getHours","getMinutes","getSeconds","_jsxs","className","main","temp","children","_jsx","type","placeholder","onChange","event","target","value","onKeyDown","key","onFocus","onClick","map","city","index","handleDropdownClick","name","sys","country","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Math","round","description","humidity","clouds","all","wind","speed","deg"],"sourceRoot":""}